"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const i=require("path"),o=require("fs-extra"),c=require("async-mutex");function u(s){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(s){for(const t in s)if(t!=="default"){const a=Object.getOwnPropertyDescriptor(s,t);Object.defineProperty(e,t,a.get?a:{enumerable:!0,get:()=>s[t]})}}return e.default=s,Object.freeze(e)}const r=u(o),l={array:()=>Array(),string:()=>String(),number:()=>Number()};class b{mutex=new c.Mutex;scheme;constructor(e){this.scheme=e}async get_db(){const e=i.resolve("database.json");await r.ensureFile(e);try{return JSON.parse(await r.readFile(e,"utf8"))}catch{}return Object()}async save_db(e){await this.mutex.runExclusive(async()=>{const t=i.resolve("database.json"),a=i.join(t,"..","database_bak.json");await r.pathExists(t)&&await r.copyFile(t,a),await r.writeFile(t,JSON.stringify(e),{flag:"w+"});try{JSON.parse(await r.readFile(t,"utf8"))}catch(n){console.error("rollback",n.message??n.toString()),await r.move(a,t,{overwrite:!0})}})}init_empty_value(e){return l[this.scheme[e]]()}async get_value(e){let a=(await this.get_db())[e];return a==null&&(a=this.init_empty_value(e)),a}async set_value(e,t){const a=await this.get_db();a[e]=t,await this.save_db(a)}}exports.storage_helper=b;
