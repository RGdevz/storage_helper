"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const c=require("D:/git/storage_helper/node_modules/atomically/dist/index.js"),i=require("D:/git/storage_helper/node_modules/fs-extra/lib/index.js");function l(r){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(r){for(const e in r)if(e!=="default"){const a=Object.getOwnPropertyDescriptor(r,e);Object.defineProperty(t,e,a.get?a:{enumerable:!0,get:()=>r[e]})}}return t.default=r,Object.freeze(t)}const s=l(c),o={},u={array:()=>Array(),string:()=>String(),number:()=>Number()};class h{scheme;db_path;constructor(t,e){this.scheme=t,this.db_path=e||process.cwd()}getDBPath(){return o.join(this.db_path,"database.json")}async get_db(){const t=this.getDBPath();if(await i.ensureFile(t),!await i.pathExists(t))throw new Error("failed to create db file");try{return JSON.parse(await s.readFile(t,"utf8"))}catch{}return Object()}async save_db(t){const e=this.getDBPath(),a=o.join(e,"..","database_bak.json");await i.pathExists(e)&&await i.copyFile(e,a),await s.writeFile(e,JSON.stringify(t));try{JSON.parse(await s.readFile(e,"utf8"))}catch(n){console.error("rollback",n.message??n.toString()),await i.move(a,e,{overwrite:!0})}}init_empty_value(t){return u[this.scheme[t]]()}async get_value(t){let a=(await this.get_db())[t];return a==null&&(a=this.init_empty_value(t)),a}async set_value(t,e){const a=await this.get_db();a[t]=e,await this.save_db(a)}}exports.storage_helper=h;
