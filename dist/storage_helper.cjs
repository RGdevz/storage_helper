"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const n=require("path"),c=require("fs-extra"),o=require("async-mutex");function u(s){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(s){for(const e in s)if(e!=="default"){const a=Object.getOwnPropertyDescriptor(s,e);Object.defineProperty(t,e,a.get?a:{enumerable:!0,get:()=>s[e]})}}return t.default=s,Object.freeze(t)}const r=u(c),b={array:()=>Array(),string:()=>String(),number:()=>Number()};class l{mutex=new o.Mutex;scheme;db_path;constructor(t,e){this.scheme=t,this.db_path=e||process.cwd()}get_db_path(){return n.join(this.db_path,"database.json")}async get_db(){const t=this.get_db_path();await r.ensureFile(t);try{return JSON.parse(await r.readFile(t,"utf8"))}catch{}return Object()}async save_db(t){await this.mutex.runExclusive(async()=>{const e=this.get_db_path(),a=n.join(e,"..","database_bak.json");await r.pathExists(e)&&await r.copyFile(e,a),await r.writeFile(e,JSON.stringify(t),{flag:"w+"});try{JSON.parse(await r.readFile(e,"utf8"))}catch(i){console.error("rollback",i.message??i.toString()),await r.move(a,e,{overwrite:!0})}})}init_empty_value(t){return b[this.scheme[t]]()}async get_value(t){let a=(await this.get_db())[t];return a==null&&(a=this.init_empty_value(t)),a}async set_value(t,e){const a=await this.get_db();a[t]=e,await this.save_db(a)}}exports.storage_helper=l;
